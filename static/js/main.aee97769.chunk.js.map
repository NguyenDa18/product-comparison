{"version":3,"sources":["components/ComparisonTable.js","components/ProductCard.js","components/ProductList.js","components/AttributeFilter.js","components/SectionHeader.js","data/Products.js","data/Filters.js","components/withSampleData.js","components/ProductComparison.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","table","minWidth","columnHeader","fontWeight","textTransform","listStyle","width","maxWidth","listItemStyle","textAlign","priceLabel","color","textLabel","colorLabel","height","margin","colorContainer","display","CustomAttributeLabel","props","classes","Typography","className","variant","gutterBottom","children","CustomColorLabel","Grid","component","style","backgroundColor","CustomPriceLabel","ComparisonTable","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","data","map","item","align","name","TableBody","filters","filter","key","scope","row","justify","alignItems","idx","Array","List","dense","labelId","labelText","ListItem","ListItemText","disableTypography","id","primary","card","position","opacity","media","backgroundSize","overlay","background","left","top","bottom","right","transition","overlaySelected","overlayText","paddingLeft","paddingRight","btnMargin","spacing","title","fontSize","ColorButton","withStyles","root","padding","Button","ProductCard","Card","CardMedia","image","container","added","onClick","removeFromCompare","addToCompare","CardContent","price","flexGrow","marginBottom","ProductList","selected","undefined","find","sel","getModalStyle","transform","button","formControl","paper","palette","AttributeFilter","React","useState","modalStyle","open","selectedFilters","state","setState","handleClose","useEffect","reduce","result","index","array","has","Fragment","startIcon","Modal","aria-labelledby","aria-describedby","onClose","FormControl","Box","my","FormLabel","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","event","target","value","label","direction","Object","keys","it","save","header","mx","products","WrappedComponent","ProductComparison","console","log","prevState","selectedItems","Set","add","delete","saveFilters","bind","this","prevProps","Container","size","Component","withSampleData","App","createMuiTheme","main","secondary","error","red","A400","default","typography","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aee97769.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Grid, Table, TableBody, TableCell, Typography, TableContainer, TableHead, TableRow, Paper, List, ListItem, ListItemText } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        minWidth: 700,\n    },\n    columnHeader: {\n        fontWeight: \"bold\",\n        textTransform: \"capitalize\"\n    },\n    listStyle: {\n        width: '100%',\n        maxWidth: 360,\n    },\n    listItemStyle: {\n        textAlign: \"right\"\n    },\n    priceLabel: {\n        color: \"green\"\n    },\n    textLabel: {\n        textTransform: \"capitalize\"\n    },\n    colorLabel: {\n        height: 20,\n        width: 20,\n        margin: 1\n    },\n    colorContainer: {\n        display: 'flex'\n    }\n}));\n\nexport function CustomAttributeLabel(props) {\n    const classes = useStyles();\n\n    return (<Typography className={classes.textLabel} variant=\"subtitle2\" gutterBottom>\n        {props.children}\n    </Typography>)\n}\n\nexport function CustomColorLabel(props) {\n    const classes = useStyles();\n\n    return (<Grid component=\"div\" className={classes.colorLabel} style={{ backgroundColor: props.backgroundColor }} />)\n}\n\nexport function CustomPriceLabel(props) {\n    const classes = useStyles();\n\n    return (<Typography className={classes.priceLabel} variant=\"subtitle2\">\n        {props.children}\n    </Typography>)\n}\n\nexport default function ComparisonTable(props) {\n    const classes = useStyles();\n\n    return (<TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell></TableCell>\n                    {\n                        props.data && props.data.map(item =>\n                            <TableCell className={classes.columnHeader} align=\"right\">{item.name}</TableCell>)\n                    }\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.filters && props.filters.map(filter =>\n                    <TableRow key={filter}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            <CustomAttributeLabel>{filter}</CustomAttributeLabel>\n                        </TableCell>\n                        {props.data.map(row =>\n                            <TableCell align=\"right\">\n                                {(filter === \"price\" ?\n                                    <CustomPriceLabel>{row[filter]}</CustomPriceLabel>\n                                    : filter === \"colors\" ?\n                                        <Grid className={classes.colorContainer} justify=\"flex-end\" alignItems=\"center\">{row[filter].map((item, idx) => <CustomColorLabel backgroundColor={item} />)}</Grid>\n                                        : (row[filter] instanceof Array) ?\n                                            <List dense className={classes.listStyle}>\n                                                {row[filter].map((item, idx) => {\n                                                    const labelId = `checkbox-list-secondary-label-${item}`;\n                                                    let labelText = `${idx + 1}. ${item}`\n                                                    return (\n                                                        <ListItem key={item} >\n                                                            <ListItemText className={classes.listItemStyle} disableTypography={true} id={labelId} primary={labelText} />\n                                                        </ListItem>\n                                                    );\n                                                })}\n                                            </List>\n                                            : row[filter])}\n                            </TableCell>\n                        )}\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    </TableContainer>)\n}","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport {CustomPriceLabel} from './ComparisonTable'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        minWidth: 210,\n        maxWidth: 210,\n        position: 'relative',\n        '&:hover $overlay': {\n            opacity: 1,\n        },\n        '&:hover $overlayText': {\n            opacity: 1\n        },\n    },\n    media: {\n        height: 250,\n        backgroundSize: \"contain\"\n    },\n    overlay: {\n        height: 250,\n        background: '#40e6b985',\n        position: 'absolute',\n        width: '100%',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n        opacity: 0,\n        transition: 'all 0.4s ease-in-out 0s',\n    },\n    overlaySelected: {\n        height: 250,\n        background: '#40e6b985',\n        position: 'absolute',\n        width: '100%',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n        opacity: 1,\n        transition: 'all 0.4s ease-in-out 0s',\n    },\n    overlayText: {\n        height: 250,\n        position: \"absolute\",\n        textAlign: \"center\",\n        paddingLeft: \"1em\",\n        paddingRight: \"1em\",\n        width: '100%',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n        opacity: 0,\n        // transform: \"translate(-50%, -50%)\",\n        transition: \"all 0.3s ease-in-out 0s\",\n    },\n    btnMargin: {\n        margin: theme.spacing(1),\n    },\n    title: {\n        fontWeight: \"bold\",\n        fontSize: \"1rem\"\n    }\n}));\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        padding: \"8px 24px\",\n        color: \"#04c18d\",\n        fontWeight: \"bold\",\n        fontSize: 13,\n        backgroundColor: \"#fff\",\n        '&:hover': {\n            backgroundColor: \"#efefef\",\n        },\n    },\n}))(Button);\n\n\nexport default function ProductCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardMedia\n                className={classes.media}\n                image={props.data.image}\n                title={props.data.name}\n            />\n            <Grid container justify=\"center\" alignItems=\"center\" className={props.added ? classes.overlaySelected : classes.overlay}>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"center\" className={classes.overlayText}>\n                {props.added ?\n                    <ColorButton variant=\"contained\" color=\"primary\" className={classes.btnMargin} onClick={props.removeFromCompare}>\n                        Remove\n                    </ColorButton>\n                    : <ColorButton variant=\"contained\" color=\"primary\" className={classes.btnMargin} onClick={props.addToCompare}>\n                        Compare\n                    </ColorButton>\n                }\n            </Grid>\n            <CardContent>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"h6\" component=\"h6\" className={classes.title}>\n                        {props.data.name}\n                    </Typography>\n                    <CustomPriceLabel>\n                        {props.data.price}\n                    </CustomPriceLabel>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProductCard from './ProductCard';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        marginBottom:10\n    },\n}));\n\n\nexport default function ProductList(props) {\n    const classes = useStyles();\n\n    return (<Grid container className={classes.root}>\n        <Grid container justify=\"center\" spacing={2}>\n            {props.data.map((item,idx) =>\n                <Grid key={idx} item>\n                    {props.selected && props.selected.find(sel=>sel.id===item.id)!==undefined\n                        ? <ProductCard added={true} data={item} removeFromCompare={() => { props.removeFromCompare(item) }} addToCompare={() => { props.addToCompare(item) }} />\n                        : <ProductCard data={item} removeFromCompare={() => { props.removeFromCompare(item) }} addToCompare={() => { props.addToCompare(item) }} />\n                    }\n                </Grid>)}\n        </Grid>\n    </Grid>)\n}","import React from 'react';\nimport { Button, Grid, Box, Modal, FormControl, FormLabel, FormGroup, FormControlLabel, FormHelperText, Checkbox, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport EditIcon from '@material-ui/icons/Edit';\nimport {CustomAttributeLabel} from './ComparisonTable'\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nexport default function AttributeFilter(props) {\n    const classes = useStyles();\n\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [state, setState] = React.useState({\n        open: false,\n        selectedFilters: {}\n\n    });\n\n    const handleOpen = () => {\n        setState({ ...state, open: true });\n    };\n\n    const handleClose = () => {\n        setState({ ...state, open: false });\n    };\n\n    const handleSubmit = () => {\n        let selected = Object.keys(state.selectedFilters).filter(it => state.selectedFilters[it] === true)\n        props.save(selected)\n        handleClose()\n    }\n\n    React.useEffect(() => {\n        setState({\n            ...state, selectedFilters: props.data.reduce(function (result, item, index, array) {\n                result[item] = props.selected.has(item) ? true : false; //a, b, c\n                return result;\n            }, {})\n        });\n    }, [props.selected])\n\n    const handleChange = name => event => {\n        setState({ ...state, selectedFilters: { ...state.selectedFilters, [name]: event.target.checked } });\n    };\n\n    return (\n        <React.Fragment>\n            <Button variant=\"outlined\" color=\"primary\" className={classes.button}\n                startIcon={<EditIcon />} onClick={handleOpen}>\n                Add/Remove Attributes\n            </Button>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={state.open}\n                onClose={handleClose}\n            >\n                <Grid style={modalStyle} className={classes.paper}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <Box my={1}>\n                            <FormLabel component=\"legend\">Select attributes for comparison</FormLabel>\n                        </Box>\n                        <FormGroup>\n                            {props.data.map(filter => <FormControlLabel\n                                control={<Checkbox checked={state.selectedFilters && state.selectedFilters[filter] ? state.selectedFilters[filter] : false} onChange={handleChange(filter)} value={filter} />}\n                                label={<CustomAttributeLabel>{filter}</CustomAttributeLabel>}\n                            />)}\n                        </FormGroup>\n                    </FormControl>\n                    <Box my={1}>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            spacing={1}\n                        >\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                                    Apply\n                            </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"contained\" onClick={handleClose}>\n                                    Close\n                            </Button>\n                            </Grid>\n\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Modal>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Box, Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        height: 60,\n    }\n}));\n\nexport default function ProductCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Box my={3} mx={1}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n                className={classes.header}\n            >\n                <Typography variant=\"h6\" gutterBottom>\n                    {props.title}\n                </Typography>\n                {props.children}\n            </Grid>\n        </Box>\n    );\n}\n","export const  products=[{\n    \"id\": \"1\",\n    \"name\": \"Cherry\",\n    \"image\": \"https://www.canr.msu.edu/uploads/236/58624/cherries.jpg\",\n    \"price\": \"$1.99\",\n    \"colors\": [\"red\", \"green\", \"blue\"],\n    \"condition\": \"Fresh\",\n    \"description\": \"Two Cherries\",\n    \"vendors\": [\"Fresh Fruits Market\", \"Fruit Ninja\"]\n  },\n  {\n    \"id\": \"2\",\n    \"name\": \"Orange\",\n    \"image\": \"https://s3-eu-west-1.amazonaws.com/nucig/Flavours/eliquid-orange-flavour-500.jpg\",\n    \"price\": \"$2.99\",\n    \"colors\": [\"green\", \"blue\"],\n    \"condition\": \"Frozen\",\n    \"description\": \"Giant Orange\",\n    \"vendors\": [\"Families Market\"]\n  },\n  {\n    \"id\": \"3\",\n    \"name\": \"Nuts\",\n    \"image\": \"https://images-na.ssl-images-amazon.com/images/I/71Y0nx6ayfL._SX425_.jpg\",\n    \"price\": \"$1.00\",\n    \"colors\": [\"red\"],\n    \"condition\": \"Frozen\",\n    \"description\": \"Mixed Nuts\",\n    \"vendors\": [\"Amazon Distributor\"]\n  },\n  {\n    \"id\": \"4\",\n    \"name\": \"Strawberry\",\n    \"image\": \"https://5.imimg.com/data5/CK/LM/MY-46960546/fresh-red-strawberry-500x500.jpg\",\n    \"price\": \"$1.49\",\n    \"colors\": [\"blue\"],\n    \"condition\": \"Fresh\",\n    \"description\": \"Just Strawberry\",\n    \"vendors\": [\"Big Basket\"]\n }]\n","export const filters = [\n    \"price\",\n    \"colors\",\n    \"condition\",\n    \"description\",\n    \"vendors\"]","import React from 'react';\nimport { products } from '../data/Products'\nimport { filters } from '../data/Filters'\n\nexport default function withSampleData(WrappedComponent) {\n    class HOC extends React.Component {\n        render() {\n            return <WrappedComponent {...this.props} products={products} filters={filters} />\n        }\n    }\n    return HOC;\n}\n","import React from 'react';\nimport { Container, Typography, Grid, Box } from '@material-ui/core';\n\nimport ProductList from './ProductList'\nimport ComparisonTable from './ComparisonTable'\nimport AttributeFilter from './AttributeFilter'\nimport SectionHeader from './SectionHeader'\nimport withSampleData from './withSampleData'\n\nimport '../App.css';\n\nclass ProductComparison extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedItems: new Set(),\n            selectedFilters: new Set(props.filters)\n        }\n        this.addToCompare = this.addToCompare.bind(this);\n        this.removeFromCompare = this.removeFromCompare.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            selectedFilters: new Set(this.props.filters)\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.filters !== prevProps.filters) {\n            this.setState({\n                selectedFilters: new Set(this.props.filters)\n            })\n        }\n    }\n\n    addToCompare = (item) => {\n        console.log(\"Item Added\", item)\n        this.setState(prevState => ({\n            selectedItems: new Set(prevState.selectedItems).add(item)\n        }))\n    }\n\n    removeFromCompare = (item) => {\n        const selected = new Set(this.state.selectedItems);\n        selected.delete(item);\n        this.setState({\n            selectedItems: selected,\n        })\n    }\n\n    saveFilters = (selected) => {\n        const selectedFilters = new Set(selected);\n        this.setState({\n            selectedFilters: selectedFilters\n        })\n\n    }\n\n    render() {\n        return (\n            <Container maxWidth=\"md\">\n                <SectionHeader title=\"Select 2 or more products for comparison\">\n                    {this.state.selectedItems.size > 1 && <AttributeFilter save={this.saveFilters} data={this.props.filters} selected={this.state.selectedFilters} />}\n                </SectionHeader>\n                <ProductList data={this.props.products} selected={[...this.state.selectedItems]} addToCompare={this.addToCompare} removeFromCompare={this.removeFromCompare} />\n                {this.state.selectedItems.size > 1 && <ComparisonTable data={[...this.state.selectedItems]} filters={[...this.state.selectedFilters]} />}\n            </Container>\n        );\n    }\n}\n\nexport default withSampleData(ProductComparison);\n","import React from 'react';\nimport ProductComparison from './components/ProductComparison';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <ProductComparison />\n    );\n  }\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f7f7f7',\n    },\n  },\n  typography:{\n    fontFamily:[\n      '\"Open Sans\"', 'sans-serif'\n    ]\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}