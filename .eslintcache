[{"/Users/danhwashere/Documents/Projects/product-compare-app/src/index.js":"1","/Users/danhwashere/Documents/Projects/product-compare-app/src/App.js":"2","/Users/danhwashere/Documents/Projects/product-compare-app/src/serviceWorker.js":"3","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ProductComparison.js":"4","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/SectionHeader.js":"5","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/AttributeFilter.js":"6","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ComparisonTable.js":"7","/Users/danhwashere/Documents/Projects/product-compare-app/src/data/Filters.js":"8","/Users/danhwashere/Documents/Projects/product-compare-app/src/data/Products.js":"9","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ProductList.js":"10","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ProductCard.js":"11"},{"size":452,"mtime":1610421921617,"results":"12","hashOfConfig":"13"},{"size":279,"mtime":1610421818186,"results":"14","hashOfConfig":"13"},{"size":5003,"mtime":1610419942349,"results":"15","hashOfConfig":"13"},{"size":1571,"mtime":1610422146525,"results":"16","hashOfConfig":"13"},{"size":661,"mtime":1610421537882,"results":"17","hashOfConfig":"13"},{"size":4139,"mtime":1610421809530,"results":"18","hashOfConfig":"13"},{"size":3929,"mtime":1610421811113,"results":"19","hashOfConfig":"13"},{"size":96,"mtime":1610421709803,"results":"20","hashOfConfig":"13"},{"size":1136,"mtime":1610421814039,"results":"21","hashOfConfig":"13"},{"size":1332,"mtime":1610421525521,"results":"22","hashOfConfig":"13"},{"size":3090,"mtime":1610421476922,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1t5k363",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/danhwashere/Documents/Projects/product-compare-app/src/index.js",[],["48","49"],"/Users/danhwashere/Documents/Projects/product-compare-app/src/App.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/serviceWorker.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ProductComparison.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/components/SectionHeader.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/components/AttributeFilter.js",["50"],"import React from \"react\";\nimport {\n  Button,\n  Grid,\n  Box,\n  Modal,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { CustomAttributeLabel } from \"./ComparisonTable\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function AttributeFilter(props) {\n  const classes = useStyles();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [selectedFilters, setSelectedFilters] = React.useState({});\n\n  const handleOpen = () => {\n    setOpen((open) => true);\n  };\n\n  const handleClose = () => {\n    setOpen((open) => false);\n  };\n\n  const handleSubmit = () => {\n    const selected = Object.entries(selectedFilters).reduce(\n      (result, [name, value]) => {\n        if (value === true) {\n          result = [...result, name];\n        }\n        return result;\n      },\n      []\n    );\n    props.save(selected);\n    handleClose();\n  };\n\n  React.useEffect(() => {\n    setSelectedFilters((selectedFilters) =>\n      props.data.reduce((result, item) => {\n        result[item] = props.selected.includes(item) ? true : false;\n        return result;\n      }, {})\n    );\n  }, [props.selected]);\n\n  const handleChange = (name) => (event) => {\n    setSelectedFilters((selectedFilters) => ({\n      ...selectedFilters,\n      [name]: event.target.checked,\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<EditIcon />}\n        onClick={handleOpen}\n      >\n        Add/Remove Attributes\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <Grid style={modalStyle} className={classes.paper}>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <Box my={1}>\n              <FormLabel component=\"legend\">\n                Select attributes for comparison\n              </FormLabel>\n            </Box>\n            <FormGroup>\n              {props.data.map((filter) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={\n                        selectedFilters && selectedFilters[filter]\n                          ? selectedFilters[filter]\n                          : false\n                      }\n                      onChange={handleChange(filter)}\n                      value={filter}\n                    />\n                  }\n                  label={<CustomAttributeLabel>{filter}</CustomAttributeLabel>}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n          <Box my={1}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={1}\n            >\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit}\n                >\n                  Apply\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={handleClose}>\n                  Close\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Modal>\n    </React.Fragment>\n  );\n}\n","/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ComparisonTable.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/data/Filters.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/data/Products.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ProductList.js",[],"/Users/danhwashere/Documents/Projects/product-compare-app/src/components/ProductCard.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":83,"column":6,"nodeType":"57","endLine":83,"endColumn":22,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setSelectedFilters' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [props.data, props.selected]",{"range":"64","text":"65"},[1844,1860],"[props.data, props.selected]"]